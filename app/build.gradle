plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def baseURLPropertiesFile = rootProject.file("baseurl.properties")
def baseURLProperties = new Properties()
baseURLProperties.load(new FileInputStream(baseURLPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.alvayonara.github_apps"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "BASE_URL", baseURLProperties['BASE_URL']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"

    // Unit Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesTestVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$converterMoshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiCodegenVersion"

    // Kotlin Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    // ViewModel KTX
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationFragmentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationUiVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Dagger 2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Epoxy
    implementation"com.airbnb.android:epoxy:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:$chuckerVersion"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chuckerVersion"
}